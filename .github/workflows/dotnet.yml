# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: [6.0.x, 7.0.x, 8.0.x]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Build Windows
      run: dotnet publish -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true
    - name: Build Linux
      run: dotnet publish -c Release -r linux-x64 --self-contained true /p:PublishSingleFile=true
    - name: Build macOS
      run: dotnet publish -c Release -r osx-x64 --self-contained true /p:PublishSingleFile=true
    - name: Build macOS (arm64)
      run: dotnet publish -c Release -r osx-arm64 --self-contained true /p:PublishSingleFile=true

  release-linux-x64:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Build and package for Linux x64
        run: |
          dotnet publish -c Release -r linux-x64 --self-contained true /p:PublishSingleFile=true
          zip linux-x64.zip bin/Release/net6.0/linux-x64/publish/CurseDelete

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-x64
          path: linux-x64.zip

  release-osx-x64:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Build and package for macOS x64
        run: |
          dotnet publish -c Release -r osx-x64 --self-contained true /p:PublishSingleFile=true
          zip osx-x64.zip bin/Release/net6.0/osx-x64/publish/CurseDelete

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: osx-x64
          path: osx-x64.zip

  release-osx-arm64:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Build and package for macOS ARM64
        run: |
          dotnet publish -c Release -r osx-arm64 --self-contained true /p:PublishSingleFile=true
          zip osx-arm64.zip bin/Release/net6.0/osx-arm64/publish/CurseDelete

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: osx-arm64
          path: osx-arm64.zip

  release-win-x64:
    runs-on: windows-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Build and package for Windows x64
        run: |
          dotnet publish -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true
          Compress-Archive -Path bin/Release/net6.0/win-x64/publish/CurseDelete.exe -DestinationPath win-x64.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: win-x64
          path: win-x64.zip

  create-release:
    runs-on: ubuntu-latest
    needs: [release-linux-x64, release-osx-x64, release-osx-arm64, release-win-x64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # - name: Upload Release Assets
      #   id: upload-release-assets
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_paths: |
      #       ${{ needs.release-linux-x64.outputs.artifact_path }}
      #       ${{ needs.release-osx-x64.outputs.artifact_path }}
      #       ${{ needs.release-osx-arm64.outputs.artifact_path }}
      #       ${{ needs.release-win-x64.outputs.artifact_path }}

